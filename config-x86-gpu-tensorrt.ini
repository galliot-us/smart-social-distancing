[API]
Host = 0.0.0.0
Port = 8000
SSLEnabled = False
SSLCertificateFile =
SSLKeyFile =

[CORE]
Host = 0.0.0.0
QueuePort = 8010
QueueAuthKey = shibalba

[App]
HasBeenConfigured = False
Resolution = 640,480
Encoder = videoconvert ! video/x-raw,format=I420 ! x264enc speed-preset=ultrafast
MaxProcesses = 1
; WIP https://github.com/neuralet/neuralet/issues/91
;Encoder: videoconvert ! vaapih264enc
DashboardURL = http://0.0.0.0:8000
ScreenshotsDirectory = /repo/data/processor/static/screenshots
EnableSlackNotifications = no
SlackChannel = lanthorn-notifications
; OccupancyAlertsMinInterval time is measured in seconds (if interval < 0 then no occupancy alerts are triggered)
OccupancyAlertsMinInterval = 180
MaxThreadRestarts = 5
GlobalReportingEmails =
GlobalReportTime = 06:00
DailyGlobalReport = False
WeeklyGlobalReport = False
HeatmapResolution = 150,150

[Area_0]
Id = area0
Name = Kitchen
Cameras = default
NotifyEveryMinutes = 0
Emails =
EnableSlackNotifications = False
OccupancyThreshold = 300
ViolationThreshold = 60
DailyReport = False
DailyReportTime = 06:00

[Source_0]
VideoPath = /repo/data/softbio_vid.mp4
Tags = kitchen
Name = Garden-Camera
Id = default
Emails =
EnableSlackNotifications = False
NotifyEveryMinutes = 0
ViolationThreshold = 60
; Distance measurement method:
; - CalibratedDistance: calculate the distance with 3-d transformed points, note that by choosing this method you should specify the inverse calibration matrix of your environment.
; - CenterPointsDistance: compare center of pedestrian boxes together
; - FourCornerPointsDistance: compare four corresponding points of pedestrian boxes and get the minimum of them.
; - If left empty the DefaultDistMethod will be employed
DistMethod =
DailyReport = False
DailyReportTime = 06:00

[Detector]
; Supported devices: Jetson , EdgeTPU, Dummy, x86
Device = x86-gpu
; Supported models: mobilenet_ssd_v2 and openpifpaf
Name = openpifpaf_tensorrt
;ImageSize should be 3 numbers seperated by commas, no spaces: 300,300,3 (for better accuracy use higher resolution when
; using openpifpaf (openpifpaf detects both faces and pedestrians)
ImageSize = 641,369,3
ModelPath =
ClassID = 1
MinScore = 0.25
; Set TensorRT Precison 32 for float32 and 16 for float16 precision based on your gpu, if it supports both of them, float32 engine is more accurate and float16 faster
TensorrtPrecision= 16

[Classifier]
Device = x86-gpu
Name = OFMClassifier
ModelPath =
ImageSize = 45,45,3
MinScore = 0.75

[Tracker]
Name = IOUTracker
MaxLost = 5
TrackerIOUThreshold = 0.5

[SourcePostProcessor_0]
Name = objects_filtering
NMSThreshold = 0.98

[SourcePostProcessor_1]
Name = social_distance
DefaultDistMethod = CenterPointsDistance
DistThreshold = 150

[SourcePostProcessor_2]
Name = anonymizer

[SourceLogger_0]
Name = video_logger

[SourceLogger_1]
Name = s3_logger
ScreenshotPeriod = 0
ScreenshotS3Bucket = my-screenshot-bucket

[SourceLogger_2]
Name = file_system_logger
TimeInterval = 0.5
LogDirectory = /repo/data/processor/static/data
ScreenshotPeriod = 0

[SourceLogger_3]
Name = web_hook_logger
Endpoint =
TimeInterval = 0.5

; Enable the PeriodicTask_0 if you want to generate reports
; [PeriodicTask_0]
; Name = reports

